package main

import (
	"fmt"
	"net"
	"sort"
)

func worker(ports, results chan int) { //modified to accept two channels
	for p := range ports {
		address := fmt.Sprintf("scanme.nmap.org:%d", p)
		conn, err := net.Dial("tcp", address)
		if err != nil {
			results <- 0 //modified to send 0 to the results channel
			continue
		}
		conn.Close()
		results <- p //modified to send the port number to the results channel
	}
}

func main() {
	ports := make(chan int, 100)
	results := make(chan int) //modified to create a results channel
	var openports []int
	for i := 0; i < cap(ports); i++ {
		go worker(ports, results)
	}
	go func() { //modified to send 1024 port numbers to the ports channel
		for i := 1; i <= 1024; i++ {
			ports <- i
		}
	}()
	{
		for i := 0; i < 1024; i++ { //modified to receive 1024 results from the results channel
			port := <-results
			if port != 0 {
				openports = append(openports, port)
			}
		}
		close(ports)
		close(results)
		sort.Ints(openports) //modified to sort the open ports
		for _, port := range openports {
			fmt.Printf("%d open\n", port)
		}
	}
}
